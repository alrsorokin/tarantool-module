apiVersion: tarantool.io/v1alpha1
kind: Cluster
metadata:
  name: {{ .Values.ClusterName }}
spec:
  selector:
    matchLabels:
      tarantool.io/cluster-id: {{ .Values.ClusterName }}
---
{{- range .Values.RoleConfig }}
  {{- $r := .RolesToAssign | toJson | quote }}
apiVersion: tarantool.io/v1alpha1
kind: Role
metadata:
  name: "{{ $.Release.Name }}-{{ .RoleName | replace "_" "" }}"
  labels:
    tarantool.io/cluster-id: {{ $.Values.ClusterName }}
    tarantool.io/role: {{ .RoleName }}
  annotations:
    tarantool.io/rolesToAssign: {{ $r }}
spec:
  selector:
    matchLabels:
      tarantool.io/replicaset-template: "{{ $.Release.Name }}-{{ .RoleName }}-template"
  numReplicasets: {{ .ReplicaSetCount }}
---
apiVersion: tarantool.io/v1alpha1
kind: ReplicasetTemplate
metadata:
  name: "{{ $.Release.Name }}-{{ .RoleName | replace "_" "" }}-template"
  labels:
    tarantool.io/cluster-id: {{ $.Values.ClusterName }}
    tarantool.io/replicaset-template: "{{ $.Release.Name }}-{{ .RoleName }}-template"
    tarantool.io/role: {{ .RoleName }}
    {{ if  .VshardGroup }}
    tarantool.io/useVshardGroups: "1"
    tarantool.io/vshardGroupName: {{ .VshardGroup }}
    {{ else }}
    tarantool.io/useVshardGroups: "0"
    {{ end }}
  annotations:
    tarantool.io/rolesToAssign: {{ $r }}
spec:
  replicas: {{ .ReplicaCount }}
  serviceName: "{{ $.Release.Name }}-{{ .RoleName }}"
  selector:
    matchLabels:
      tarantool.io/pod-template: "{{ $.Release.Name }}-{{ .RoleName }}-pod-template"
  volumeClaimTemplates:
    - metadata:
        name: {{ $.Release.Name }}
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if  $.Values.persistence.storageClassName }}
        storageClassName: {{ $.Values.persistence.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .DiskSize }}
  template:
    metadata:
      labels:
        tarantool.io/cluster-id: "{{ $.Values.ClusterName }}"
        tarantool.io/cluster-domain-name: "{{ $.Values.ClusterDomainName }}"
        tarantool.io/pod-template: "{{ $.Release.Name }}-{{ .RoleName }}-pod-template"
        {{ if .VshardGroup }}
        tarantool.io/useVshardGroups: "1"
        tarantool.io/vshardGroupName: {{ .VshardGroup }}
        {{ else }}
        tarantool.io/useVshardGroups: "0"
        {{ end }}
      annotations:
        tarantool.io/rolesToAssign: {{ $r }}
        prometheus.io/path: "{{ $.Values.Prometheus.path }}"
        prometheus.io/port: "{{ $.Values.Prometheus.port}}"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 10
      dnsConfig:
    {{- if $.Values.dnsConfig }}
{{ toYaml $.Values.dnsConfig | indent 8 }}
    {{- end }}
        options:
          - name: ndots
            value: "1"
      securityContext:
        fsGroup: {{ $.Values.securityContext.fsGroup }}
    {{- if $.Values.affinity }}
      affinity:
{{ toYaml $.Values.affinity | indent 8 }}
    {{- end }}
      containers:
      - name: "{{ $.Release.Name }}-container"
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
      {{- if .lifecycle }}
        lifecycle:
{{ toYaml .lifecycle | indent 10 }}
      {{- end }}
        volumeMounts:
          - name: {{ $.Release.Name }}
            mountPath: "{{ $.Values.TarantoolWorkDir }}"
          # - name: share
          #   mountPath: /opt/share
        {{-  if .Volumes }}
          {{- range $name, $volume := .Volumes }}
          - name: "{{ $name }}"
            mountPath: "{{ $volume.mountpoint }}"
            {{- if $volume.subPath }}
            subPath: "{{ $volume.subPath }}"
            {{- end }}
          {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: "{{ .CPUallocation }}"
            memory: "{{ add .MemtxMemoryMB $.Values.LuaMemoryReserveMB }}M"
          limits:
            cpu: "{{ .CPUallocation }}"
            memory: "{{ add .MemtxMemoryMB $.Values.LuaMemoryReserveMB }}M"
        ports:
          - containerPort: 3301
            protocol: TCP
            name: app
          - containerPort: 3301
            protocol: UDP
            name: app-udp
          - containerPort: 8081
            protocol: TCP
            name: http
        env:
          - name: ENVIRONMENT
            value: "{{ $.Values.ClusterEnv }}"
          - name: TARANTOOL_INSTANCE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: TARANTOOL_ALIAS
            value: "$(TARANTOOL_INSTANCE_NAME)"
          - name: TARANTOOL_MEMTX_MEMORY
            value: "{{ mul .MemtxMemoryMB 1048576 }}"
          - name: TARANTOOL_BUCKET_COUNT
            value: {{ $.Values.VshardBucketCount | default "30000" | quote }}
          - name: TARANTOOL_WORKDIR
            value: "{{ $.Values.TarantoolWorkDir }}"
          - name: TARANTOOL_ADVERTISE_TMP
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: TARANTOOL_ADVERTISE_HOST
            value: "$(TARANTOOL_ADVERTISE_TMP).{{ $.Values.ClusterName }}.{{ $.Release.Namespace }}.svc.{{ $.Values.ClusterDomainName }}"
          - name: TARANTOOL_ADVERTISE_URI
            value: "$(TARANTOOL_ADVERTISE_HOST):3301"
          - name: TARANTOOL_PROBE_URI_TIMEOUT
            value: "60"
          - name: TARANTOOL_HTTP_PORT
            value: "8081"
          {{- range $param, $value := .BoxParameters }}
          - name: "TARANTOOL_{{ $param | upper }}"
            value: "{{ $value }}"
          {{- end }}
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
# volumes:
      #   - name: share
      #     hostPath:
      #       path: /mnt/share
      #       type: Directory
      {{- if .Volumes }}
      volumes:
      {{- range $name, $volume := .Volumes }}
        - name: "{{ $name }}"{{ $volume.type | toYaml | nindent 10 }}
      {{- end }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ $.Release.Name }}-{{ .RoleName }}"
  labels:
    tarantool.io/role: {{ .RoleName }}
spec:
  ports:
    - port: 8081
      name: web
      protocol: TCP
    - port: 3301
      name: app
      protocol: TCP
  selector:
    tarantool.io/role: {{ .RoleName }}
---
{{- end }}
---
